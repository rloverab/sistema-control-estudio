/*
 * Copyright (C) 2021 Roger Lovera <roger.lovera>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package aplicacion;

import clases.Consultas;
import clases.Controls;
import clases.Reportes;
import clases.Resolucion;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Roger Lovera
 */
public class VentanaPlanesEstudio extends javax.swing.JInternalFrame {
    private final Consultas consultas;
    private final Reportes reportes;
    private ArrayList<Resolucion> resoluciones;    

    /**
     * Creates new form PlanesEstudio
     *
     * @param consultas
     * @param reportes
     */    
    public VentanaPlanesEstudio(
            Consultas consultas, 
            Reportes reportes) {
        initComponents();
        resoluciones = null;
        this.consultas = consultas;
        this.reportes = reportes;

        if (consultas != null) {
            fillComboBoxCarreras();
            fillTablePlanEstudio();
        }else{
            JOptionPane.showMessageDialog(
                    this.rootPane, 
                    "Error cargando las consultas", 
                    "ERROR", 
                    JOptionPane.ERROR_MESSAGE);
            dispose();
        }
    }

    //Setters    
    //Getters
    //Actions
    private void fillComboBoxCarreras() {
        Controls.fillComboBox(
                cbxCarreras,
                consultas.getCarreras(),
                "Seleccione...");
    }

    private void fillComboBoxResoluciones() {
        cbxAprobaciones.removeAllItems();
        cbxAprobaciones.addItem("Seleccione...");

        resoluciones = consultas.getResoluciones(cbxCarreras.getSelectedItem().toString());

        resoluciones.forEach(e -> {
            cbxAprobaciones.addItem(e.toString());
        });
    }

    private void fillComboBoxNiveles() {        
        int index;
        index = cbxAprobaciones.getSelectedIndex() - 1;

        if (index >= 0) {
            Controls.fillComboBox(
                    cbxNiveles,
                    consultas.getNiveles(
                            cbxCarreras.getSelectedItem().toString(),
                            resoluciones.get(index).getResolucion(),
                            resoluciones.get(index).getActa(),
                            resoluciones.get(index).getFecha()),
                    "Todos");
        }

    }

    private void fillTablePlanEstudio() {        
        String[] header = {"id", "Código", "Unidad", "HTA", "HTAS", "UC"};        
        int[] widths = {0, 140, -1, 40, 50, 40};
        int index;
        ArrayList<Object[]> rows;
        
        index = cbxAprobaciones.getSelectedIndex() - 1;
        rows = null;
        
        if(cbxNiveles.getSelectedIndex() >= 0){
            rows = consultas.getPlanEstudio(
                    cbxCarreras.getSelectedItem().toString(),
                    cbxNiveles.getSelectedIndex() > 0 ? cbxNiveles.getSelectedItem().toString() : null,
                    resoluciones.get(index).getResolucion(),
                    resoluciones.get(index).getActa(),
                    resoluciones.get(index).getFecha());
        }
        
        Controls.fillTable(
                tblPlanEstudio, 
                header, 
                widths, 
                rows);
    }

    private void showPlanEstudio() {
        fillTablePlanEstudio();
        btnMostrar.setEnabled(false);
    }

    private void exportPlanEstudio() {
        String carrera;
        String nivel;
        int index;

        carrera = cbxCarreras.getSelectedItem().toString();
        nivel = cbxNiveles.getSelectedIndex() > 0 ? cbxNiveles.getSelectedItem().toString() : null;
        index = cbxAprobaciones.getSelectedIndex() - 1;
        
        reportes.generateReportPlanEstudio(
                carrera, 
                nivel, 
                resoluciones.get(index).getResolucion(), 
                resoluciones.get(index).getActa(), 
                resoluciones.get(index).getFecha());        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cbxCarreras = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbxAprobaciones = new javax.swing.JComboBox<>();
        btnMostrar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cbxNiveles = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPlanEstudio = new javax.swing.JTable();
        btnExportar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();

        setTitle("Planes de estudio");
        setPreferredSize(new java.awt.Dimension(598, 498));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos"));

        cbxCarreras.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxCarreras.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxCarrerasItemStateChanged(evt);
            }
        });

        jLabel1.setText("Carrera");

        jLabel2.setText("Aprobación");

        cbxAprobaciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxAprobaciones.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxAprobacionesItemStateChanged(evt);
            }
        });

        btnMostrar.setText("Mostrar");
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        jLabel3.setText("Nivel");

        cbxNiveles.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxNiveles.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxNivelesItemStateChanged(evt);
            }
        });

        tblPlanEstudio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblPlanEstudio);

        btnExportar.setText("Exportar");
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbxNiveles, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxCarreras, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxAprobaciones, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnExportar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbxAprobaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMostrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbxNiveles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExportar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCerrar)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCerrar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbxCarrerasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxCarrerasItemStateChanged
        if (cbxCarreras.getSelectedIndex() <= 0) {
            cbxAprobaciones.removeAllItems();
            cbxAprobaciones.setEnabled(false);
        } else {
            fillComboBoxResoluciones();
            cbxAprobaciones.setEnabled(true);
        }
    }//GEN-LAST:event_cbxCarrerasItemStateChanged

    private void cbxAprobacionesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxAprobacionesItemStateChanged
        boolean enabled;

        enabled = cbxAprobaciones.getSelectedIndex() > 0;
        btnMostrar.setEnabled(enabled);
        btnExportar.setEnabled(enabled);        

        if (enabled) {
            fillComboBoxNiveles();
        } else {
            cbxNiveles.removeAllItems();
        }

        cbxNiveles.setEnabled(enabled);
    }//GEN-LAST:event_cbxAprobacionesItemStateChanged

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void cbxNivelesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxNivelesItemStateChanged
        boolean enabled;

        enabled = (cbxNiveles.getSelectedIndex() >= 0);

        btnMostrar.setEnabled(enabled);

        if (tblPlanEstudio.getRowCount() > 0) {
            ((DefaultTableModel) tblPlanEstudio.getModel()).setRowCount(0);
        }
    }//GEN-LAST:event_cbxNivelesItemStateChanged

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
        showPlanEstudio();
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
        exportPlanEstudio();
    }//GEN-LAST:event_btnExportarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton btnMostrar;
    private javax.swing.JComboBox<String> cbxAprobaciones;
    private javax.swing.JComboBox<String> cbxCarreras;
    private javax.swing.JComboBox<String> cbxNiveles;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPlanEstudio;
    // End of variables declaration//GEN-END:variables
}
