/*
 * Copyright (C) 2021 Roger Lovera <roger.lovera>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package aplicacion;

import clases.Queries;
import clases.Reports;
import java.beans.PropertyVetoException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import servicios.ConnectionDB;

/**
 *
 * @author Roger Lovera
 */
public class MDIPrincipal extends javax.swing.JFrame {

    private final ConnectionDB conn;
    private final Queries queries;
    private final Reports reports;

    /**
     * Creates new form VentanaPrincipal
     */
    public MDIPrincipal() {
        initComponents();
        conn = new ConnectionDB(
                "localhost",
                "3306",
                "sceusuario",
                "cambiame",
                "scedb");
        conn.open();

        queries = new Queries(conn);
        reports = new Reports(conn);

        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    private void abrirVentana(
            JInternalFrame internalFrame,
            boolean multiplesInstancias) {
        if (multiplesInstancias) {
            this.desktopPane.add(internalFrame);
            internalFrame.setVisible(true);
        } else {
            for (JInternalFrame frame : this.desktopPane.getAllFrames()) {
                if (frame.getClass() == internalFrame.getClass()) {
                    frame.toFront();
                    try {
                        frame.setSelected(true);
                    } catch (PropertyVetoException ex) {
                        Logger.getLogger(MDIPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    return;
                }
            }
            this.desktopPane.add(internalFrame);
            internalFrame.setVisible(true);
        }
    }

    private void exit() {

        if (JOptionPane.showInternalConfirmDialog(this.desktopPane, "¿Desea salir de la aplicación?", "Salir", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            conn.close();
            this.dispose();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        menuAdministracion = new javax.swing.JMenu();
        itemAlumnos = new javax.swing.JMenuItem();
        itemDocentes = new javax.swing.JMenuItem();
        itemInscripcion_Admin = new javax.swing.JMenuItem();
        itemOfertaAcademica1 = new javax.swing.JMenuItem();
        itemAjusteInscripcion = new javax.swing.JMenuItem();
        itemActualizarIndice = new javax.swing.JMenuItem();
        itemCalculadorTrayecto = new javax.swing.JMenuItem();
        itemPensum = new javax.swing.JMenuItem();
        itemPeriodos = new javax.swing.JMenuItem();
        menuConsulta = new javax.swing.JMenu();
        itemDatosEstudiantes = new javax.swing.JMenuItem();
        menuProcesos = new javax.swing.JMenu();
        itemInscripcion_Proc = new javax.swing.JMenuItem();
        menuCargar = new javax.swing.JMenu();
        itemCalificaciones = new javax.swing.JMenuItem();
        itemOfertaAcademica2 = new javax.swing.JMenuItem();
        itemEjecutarReglamento = new javax.swing.JMenuItem();
        menuReportes = new javax.swing.JMenu();
        menuEstudiantes = new javax.swing.JMenu();
        menuConstancia = new javax.swing.JMenu();
        itemEstudios = new javax.swing.JMenuItem();
        itemInscripcion_Repo = new javax.swing.JMenuItem();
        itemCalificacion = new javax.swing.JMenuItem();
        itemRecordAcademico = new javax.swing.JMenuItem();
        itemPlanillaInscripcion = new javax.swing.JMenuItem();
        itemNotasCertificadas = new javax.swing.JMenuItem();
        menuDocentes = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        menuCorteNotas = new javax.swing.JMenu();
        itemSabanas = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        menuEstadisticas = new javax.swing.JMenu();
        itemMatricula = new javax.swing.JMenuItem();
        itemRendimiento = new javax.swing.JMenuItem();
        menuMantenimiento = new javax.swing.JMenu();
        menuUsuarios = new javax.swing.JMenu();
        itemCrear = new javax.swing.JMenuItem();
        itemModificar = new javax.swing.JMenuItem();
        itemEliminar = new javax.swing.JMenuItem();
        menuPeriodo = new javax.swing.JMenu();
        itemApertura = new javax.swing.JMenuItem();
        itemCierre = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        itemCerrar = new javax.swing.JMenuItem();
        itemSalir = new javax.swing.JMenuItem();
        menuAyuda = new javax.swing.JMenu();
        itemManual = new javax.swing.JMenuItem();
        itemAcercaDe = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de Control de Estudio");
        setLocationByPlatform(true);
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setName("framePrincipal"); // NOI18N

        menuArchivo.setMnemonic('a');
        menuArchivo.setText("Archivo");

        menuAdministracion.setMnemonic('f');
        menuAdministracion.setText("Administración");

        itemAlumnos.setText("Estudiante");
        itemAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAlumnosActionPerformed(evt);
            }
        });
        menuAdministracion.add(itemAlumnos);

        itemDocentes.setText("Docentes");
        itemDocentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemDocentesActionPerformed(evt);
            }
        });
        menuAdministracion.add(itemDocentes);

        itemInscripcion_Admin.setText("Inscripción");
        itemInscripcion_Admin.setEnabled(false);
        menuAdministracion.add(itemInscripcion_Admin);

        itemOfertaAcademica1.setText("Oferta académica");
        itemOfertaAcademica1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemOfertaAcademica1ActionPerformed(evt);
            }
        });
        menuAdministracion.add(itemOfertaAcademica1);

        itemAjusteInscripcion.setText("Ajustes de inscripción");
        itemAjusteInscripcion.setEnabled(false);
        menuAdministracion.add(itemAjusteInscripcion);

        itemActualizarIndice.setText("Actualizar índice");
        itemActualizarIndice.setEnabled(false);
        menuAdministracion.add(itemActualizarIndice);

        itemCalculadorTrayecto.setText("Calcular trayecto");
        itemCalculadorTrayecto.setEnabled(false);
        menuAdministracion.add(itemCalculadorTrayecto);

        itemPensum.setText("Pensum de estudio");
        itemPensum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemPensumActionPerformed(evt);
            }
        });
        menuAdministracion.add(itemPensum);

        itemPeriodos.setText("Periodos");
        itemPeriodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemPeriodosActionPerformed(evt);
            }
        });
        menuAdministracion.add(itemPeriodos);

        menuArchivo.add(menuAdministracion);

        menuConsulta.setText("Consulta");
        menuConsulta.setEnabled(false);

        itemDatosEstudiantes.setText("Datos de estudiantes");
        menuConsulta.add(itemDatosEstudiantes);

        menuArchivo.add(menuConsulta);

        menuProcesos.setText("Procesos");
        menuProcesos.setEnabled(false);

        itemInscripcion_Proc.setText("Inscripción");
        menuProcesos.add(itemInscripcion_Proc);

        menuCargar.setText("Cargar");

        itemCalificaciones.setText("Calificaciones");
        menuCargar.add(itemCalificaciones);

        itemOfertaAcademica2.setText("Oferta académica");
        menuCargar.add(itemOfertaAcademica2);

        menuProcesos.add(menuCargar);

        itemEjecutarReglamento.setText("Ejecutar reglamento");
        menuProcesos.add(itemEjecutarReglamento);

        menuArchivo.add(menuProcesos);

        menuReportes.setText("Reportes");
        menuReportes.setEnabled(false);

        menuEstudiantes.setText("Estudiantes");

        menuConstancia.setText("Constancia");

        itemEstudios.setText("Estudios");
        menuConstancia.add(itemEstudios);

        itemInscripcion_Repo.setText("Inscripción");
        menuConstancia.add(itemInscripcion_Repo);

        itemCalificacion.setText("Calificación");
        menuConstancia.add(itemCalificacion);

        menuEstudiantes.add(menuConstancia);

        itemRecordAcademico.setText("Record académico");
        menuEstudiantes.add(itemRecordAcademico);

        itemPlanillaInscripcion.setText("Planilla de inscripción");
        menuEstudiantes.add(itemPlanillaInscripcion);

        itemNotasCertificadas.setText("Notas certificadas");
        menuEstudiantes.add(itemNotasCertificadas);

        menuReportes.add(menuEstudiantes);

        menuDocentes.setText("Docentes");

        jMenuItem2.setText("Lista de asistencias");
        menuDocentes.add(jMenuItem2);

        menuCorteNotas.setText("Corte de notas");
        menuDocentes.add(menuCorteNotas);

        itemSabanas.setText("Sábanas");
        menuDocentes.add(itemSabanas);

        jMenuItem4.setText("jMenuItem4");
        menuDocentes.add(jMenuItem4);

        menuReportes.add(menuDocentes);

        menuEstadisticas.setText("Estadísticas");

        itemMatricula.setText("Matrícula");
        menuEstadisticas.add(itemMatricula);

        itemRendimiento.setText("Rendimiento");
        menuEstadisticas.add(itemRendimiento);

        menuReportes.add(menuEstadisticas);

        menuArchivo.add(menuReportes);

        menuMantenimiento.setText("Mantenimiento");
        menuMantenimiento.setEnabled(false);

        menuUsuarios.setText("Usuarios");

        itemCrear.setText("Crear");
        menuUsuarios.add(itemCrear);

        itemModificar.setText("Modificar");
        menuUsuarios.add(itemModificar);

        itemEliminar.setText("Eliminar");
        menuUsuarios.add(itemEliminar);

        menuMantenimiento.add(menuUsuarios);

        menuPeriodo.setText("Período");

        itemApertura.setText("Apertura");
        menuPeriodo.add(itemApertura);

        itemCierre.setText("Cierre");
        menuPeriodo.add(itemCierre);

        menuMantenimiento.add(menuPeriodo);

        menuArchivo.add(menuMantenimiento);
        menuArchivo.add(jSeparator1);

        itemCerrar.setText("Cerrar sesión");
        menuArchivo.add(itemCerrar);

        itemSalir.setText("Salir");
        itemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSalirActionPerformed(evt);
            }
        });
        menuArchivo.add(itemSalir);

        menuBar.add(menuArchivo);

        menuAyuda.setMnemonic('h');
        menuAyuda.setText("Ayuda");

        itemManual.setMnemonic('c');
        itemManual.setText("Manual");
        menuAyuda.add(itemManual);

        itemAcercaDe.setMnemonic('a');
        itemAcercaDe.setText("Acerca de...");
        menuAyuda.add(itemAcercaDe);

        menuBar.add(menuAyuda);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSalirActionPerformed
        this.exit();
    }//GEN-LAST:event_itemSalirActionPerformed

    private void itemAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAlumnosActionPerformed
        abrirVentana(
                new IFrameEstudiantes(queries), 
                false);
    }//GEN-LAST:event_itemAlumnosActionPerformed

    private void itemPensumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemPensumActionPerformed
        abrirVentana(
                new IFramePlanesEstudio(queries, reports),
                false);

    }//GEN-LAST:event_itemPensumActionPerformed

    private void itemPeriodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemPeriodosActionPerformed
        abrirVentana(
                new IFramePeriodos(queries),
                false);
    }//GEN-LAST:event_itemPeriodosActionPerformed

    private void itemDocentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemDocentesActionPerformed
        abrirVentana(
                new IFrameDocentes(conn), 
                false);
    }//GEN-LAST:event_itemDocentesActionPerformed

    private void itemOfertaAcademica1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemOfertaAcademica1ActionPerformed
        abrirVentana(
                new IFrameOfertaAcademica(queries),
                false);
    }//GEN-LAST:event_itemOfertaAcademica1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MDIPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MDIPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MDIPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MDIPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MDIPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenuItem itemAcercaDe;
    private javax.swing.JMenuItem itemActualizarIndice;
    private javax.swing.JMenuItem itemAjusteInscripcion;
    private javax.swing.JMenuItem itemAlumnos;
    private javax.swing.JMenuItem itemApertura;
    private javax.swing.JMenuItem itemCalculadorTrayecto;
    private javax.swing.JMenuItem itemCalificacion;
    private javax.swing.JMenuItem itemCalificaciones;
    private javax.swing.JMenuItem itemCerrar;
    private javax.swing.JMenuItem itemCierre;
    private javax.swing.JMenuItem itemCrear;
    private javax.swing.JMenuItem itemDatosEstudiantes;
    private javax.swing.JMenuItem itemDocentes;
    private javax.swing.JMenuItem itemEjecutarReglamento;
    private javax.swing.JMenuItem itemEliminar;
    private javax.swing.JMenuItem itemEstudios;
    private javax.swing.JMenuItem itemInscripcion_Admin;
    private javax.swing.JMenuItem itemInscripcion_Proc;
    private javax.swing.JMenuItem itemInscripcion_Repo;
    private javax.swing.JMenuItem itemManual;
    private javax.swing.JMenuItem itemMatricula;
    private javax.swing.JMenuItem itemModificar;
    private javax.swing.JMenuItem itemNotasCertificadas;
    private javax.swing.JMenuItem itemOfertaAcademica1;
    private javax.swing.JMenuItem itemOfertaAcademica2;
    private javax.swing.JMenuItem itemPensum;
    private javax.swing.JMenuItem itemPeriodos;
    private javax.swing.JMenuItem itemPlanillaInscripcion;
    private javax.swing.JMenuItem itemRecordAcademico;
    private javax.swing.JMenuItem itemRendimiento;
    private javax.swing.JMenu itemSabanas;
    private javax.swing.JMenuItem itemSalir;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenu menuAdministracion;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuCargar;
    private javax.swing.JMenu menuConstancia;
    private javax.swing.JMenu menuConsulta;
    private javax.swing.JMenu menuCorteNotas;
    private javax.swing.JMenu menuDocentes;
    private javax.swing.JMenu menuEstadisticas;
    private javax.swing.JMenu menuEstudiantes;
    private javax.swing.JMenu menuMantenimiento;
    private javax.swing.JMenu menuPeriodo;
    private javax.swing.JMenu menuProcesos;
    private javax.swing.JMenu menuReportes;
    private javax.swing.JMenu menuUsuarios;
    // End of variables declaration//GEN-END:variables

}
